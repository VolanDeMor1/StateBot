const Discord = require('discord.js');

module.exports = {
    name: 'spacepay',
	description: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–º–ø–æ–∑–∏—Ü–∏—é.',
    aliases: ["sp", "—Å–ø"],
    args: true,
    usage: "[—Å—É–º–º–∞] [–≤—Ä–µ–º—è(–¥–Ω–∏)]",
	cooldown: 150,
    block: false,
	execute(message, args, bot) {
        if(!Number(args[0])){
            const embed = new Discord.MessageEmbed()
            .setColor('#ff4f4f')
            .setTitle('üö´ **–í–Ω–∏–º–∞–Ω–∏–µ!**')
            .setTimestamp()
            .setDescription("–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É")
            .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
            message.channel.send(embed);
            return;
        }
        if(!args[1]){
            let embed = new Discord.MessageEmbed()
            .setTitle(`**SpacePay <:spacebank:715319742025695302>**`)
            .setDescription(`–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∫–æ–¥?`)
            .setColor('#03fc56')
            .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
            message.reply(embed).then(msg => {
                msg.react(`‚úÖ`);
                let c = msg.createReactionCollector((r, u) => !u.bot, {max: 1, time:600000});
                c.on("collect", (r, u) => {
                    if(u.id !== message.author.id){
                        clearreact(msg, u.id);
                        collector(msg)
                        return "";
                    }else{
                        genCode(msg, r, u);
                    }
                });
            })
            
            async function genCode(msg, r, user){
                var password = "";
                var symbols = "1234567890";
                for (var i = 0; i < 5; i++){
                    password += symbols.charAt(Math.floor(Math.random() * symbols.length));     
                }
                newlist(msg, r, user, password);
            }

            async function newlist(msg, r, user, code){
                if(r.emoji.name == '‚úÖ'){
                    if(bot.db.spacepay[code]){
                        genCode(msg, r, user);
                        return "";
                    }
                    bot.db.spacepay[code] = {
                        creator:user.id,
                        sum:args[0],
                        time: "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ",
                        chek:false
                    }
                    let embed = new Discord.MessageEmbed()
                    .setTitle(`**SpacePay <:spacebank:715319742025695302>**`)
                    .setDescription(`–í–∞—à –∫–æ–¥: **${code}**`)
                    .addField(`–ò—Å—Ç–µ–∫–∞–µ—Ç:`, `‚ôæÔ∏è`, true)
                    .addField(`–°—É–º–º–∞:`, `${args[0]} <:ap:721753226768023582>`, true)
                    .setColor('#03fc56')
                    .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
                    msg.delete()
                    user.send(embed);
                    bot.channels.cache.get('715517792182468639').send(embed);
                }
            }

            function collector(msg) {
                let c = msg.createReactionCollector((r, u) => !u.bot, {max: 1, time:600000});
                c.on("collect", (r, u) => {
                    if(u.id !== message.author.id){
                        clearreact(msg, u.id);
                        collector(msg);
                        return "";
                    }else{
                        genCode(msg, r, u);
                    }
                });
            };

            async function clearreact(msg, uid){
                const userReactions = msg.reactions.cache.filter(reaction => reaction.users.cache.has(uid));
                for (const reaction of userReactions.values()) {
                    await reaction.users.remove(uid).then(()=>{
                        msg.react('‚úÖ')
                    });}
            }
        }else if(args[1]){
            if(!Number(args[1])){
                const embed = new Discord.MessageEmbed()
                .setColor('#ff4f4f')
                .setTitle('üö´ **–í–Ω–∏–º–∞–Ω–∏–µ!**')
                .setTimestamp()
                .setDescription("–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –¥–∞—Ç—É")
                .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
                message.channel.send(embed);
                return;
            }
            if(args[1] <= 0){
                const embed = new Discord.MessageEmbed()
                .setColor('#ff4f4f')
                .setTitle('üö´ **–í–Ω–∏–º–∞–Ω–∏–µ!**')
                .setTimestamp()
                .setDescription("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –º–µ–Ω—å—à–µ 1–≥–æ –¥–Ω—è")
                .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
            }
            let embed = new Discord.MessageEmbed()
            .setTitle(`**SpacePay <:spacebank:715319742025695302>**`)
            .setDescription(`–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å ${args[1]} –¥–Ω–µ–π?`)
            .setColor('#03fc56')
            .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
            message.reply(embed).then(msg => {
                msg.react(`‚úÖ`);
                let c = msg.createReactionCollector((r, u) => !u.bot, {max: 1, time:600000});
                c.on("collect", (r, u) => {
                    if(u.id !== message.author.id){
                        clearreact(msg, u.id);
                        collectorA(msg)
                        return "";
                    }else{
                        genCodeA(msg, r, u);
                    }
                });
            })

            function collectorA(msg) {
                let c = msg.createReactionCollector((r, u) => !u.bot, {max: 1, time:600000});
                c.on("collect", (r, u) => {
                    if(u.id !== message.author.id){
                        clearreact(msg, u.id);
                        collectorA(msg);
                        return "";
                    }else{
                        genCodeA(msg, r, u);
                    }
                });
            };

            async function genCodeA(msg, r, user){
                var password = "";
                var symbols = "1234567890";
                for (var i = 0; i < 5; i++){
                    password += symbols.charAt(Math.floor(Math.random() * symbols.length));     
                }
                newlistB(msg, r, user, password);
            }

            async function newlistB(msg, r, user, code){
                if(r.emoji.name = '‚úÖ'){
                    if(bot.db.spacepay[code]){
                        genCodeA(user);
                        return "";
                    }
                    let time = args[1] * 86400000;
                    bot.db.spacepay[code] = {
                        creator:user.id,
                        sum:args[0],
                        time:time,
                        chek:false
                    }
                    let embed = new Discord.MessageEmbed()
                    .setTitle(`**SpacePay <:spacebank:715319742025695302>**`)
                    .setDescription(`–í–∞—à –∫–æ–¥: **${code}**`)
                    .addField(`–ò—Å—Ç–µ–∫–∞–µ—Ç:`, `–ß–µ—Ä–µ–∑ ${args[1]} –¥–Ω–µ–π`, true)
                    .addField(`–°—É–º–º–∞:`, `${args[0]} <:ap:721753226768023582>`, true)
                    .setColor('#03fc56')
                    .setFooter(`SpaceBank`, 'https://cdn.discordapp.com/emojis/715319742025695302.png?v=1');
                    msg.delete()
                    user.send(embed);
                    bot.channels.cache.get('715517792182468639').send(embed);
                }
            }
        }
	}
};
